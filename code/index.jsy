import FabricHub from 'msg-fabric-core/esm/mf-json-node.js'
import * as M from './mf_mqtt.jsy'

await new Promise(v => setTimeout(v, 2000*Math.random()))
console.log @ "JITTER", new Date().toISOString()

const hub = FabricHub.create()

let id = hub.local.id_route
hub.local.addTarget @ 'hello',
  pkt => console.log(`Hello MSG RECV [${id}]:`, pkt.body)
hub.send @ [id, 'hello'], @{} test: 'smoke?'


let mf_svr = hub.tcp.createServer()
mf_svr.listen @: port: 0, host: '0.0.0.0'
let conn = await mf_svr.conn_info(true)


let mqtt = await M.mqtt_start(id, conn)
hub.router.addDiscovery @
  M.disco_mqtt(hub, mqtt)

//await mf_mqtt_demo(hub, mqtt)



async function mf_mqtt_demo(hub, mqtt) ::
  let me = `IAM -- ${hub.local.id_route}`

  mqtt.on_topic @ M.pfx_presence+':id',
    (pkt, params, ctx) => ::
      if params.id != hub.local.id_route ::
        console.log @ "SAW:", params, pkt.json()
      else console.log @ "SAW myself!", params, pkt.json()

  mqtt.on_topic @ M.pfx_presence+':id',
    async (pkt, params, ctx) => ::
      await hub.send @ [params.id, 'hello'],
        @{} msg: `hello from ${me}`
            myself: params.id == hub.local.id_route

